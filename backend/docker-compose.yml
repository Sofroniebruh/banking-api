services:
  gateway:
    image: openjdk:21-jdk
    ports:
      - "8080:8080"
    working_dir: /app
    volumes:
      - ./api-gateway:/app
    env_file:
      - ./api-gateway/.env
    command: ./mvnw spring-boot:run
    depends_on:
      - auth-service
    networks:
      - public
      - private
      
  auth-service:
    image: openjdk:21-jdk
    working_dir: /app
    volumes:
      - ./auth-service:/app
    expose:
      - "8081"
    command: ./mvnw spring-boot:run
    depends_on:
      - db
    env_file:
      - ./auth-service/.env
    networks:
      - public
      - private
      
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-bank-api
    expose:
      - 15672
      - 5672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - private
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      
  python-bridge:
    build: ./python-bridge
    container_name: python-bridge-bank
    env_file:
      - ./python-bridge/.env
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - private
  
  user-service:
    image: openjdk:21-jdk
    working_dir: /app
    volumes:
      - ./user-service:/app
    expose:
      - "8082"
    command: ./mvnw spring-boot:run
    depends_on:
      - db
    env_file:
      - ./user-service/.env
    networks:
      - public
      - private
  
  account-service:
    image: openjdk:21-jdk
    working_dir: /app
    volumes:
      - ./account-service:/app
    expose:
      - "8083"
    command: ./mvnw spring-boot:run
    depends_on:
      - db
    env_file:
      - ./account-service/.env
    networks:
      - public
      - private
  
  transactions-service:
    image: openjdk:21-jdk
    working_dir: /app
    volumes:
      - ./transactions-service:/app
    expose:
      - "8084"
    command: ./mvnw spring-boot:run
    depends_on:
      - db
    env_file:
      - ./transactions-service/.env
    networks:
      - public
      - private

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - private
  
  redis:
    image: redis:7.4
    container_name: redis
    restart: always
    command: [
      "redis-server",
      "--requirepass", "${REDIS_PASSWORD}",
      "--appendonly", "yes"
    ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - private

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - public

  grafana:
    image: grafana/grafana
    ports:
      - "3005:3000"
    networks:
      - public

volumes:
  postgres_data:
  rabbitmq-data:
  redis_data:
  
networks:
  public:
    driver: bridge
  private:
    driver: bridge
